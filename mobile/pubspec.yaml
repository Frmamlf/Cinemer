name: cinemer
description: A movie, TV shows & anime app powered by TMDB

# The following line prevents the package from being accidentally published to
# pub.dev using `flutter pub publish`. This is preferred for private packages.
publish_to: 'none' # Remove this line if you wish to publish to pub.dev

version: 1.0.0+1

environment:
  sdk: '>=3.0.0 <4.0.0'

dependencies:
  flutter:
    sdk: flutter
  
  # Internationalization
  flutter_localizations:
    sdk: flutter
  
  # UI Components
  cupertino_icons: ^1.0.2
  material_design_icons_flutter: ^7.0.7296
  material_symbols_icons: ^4.2780.0
  google_fonts: ^6.2.1
  flutter_staggered_grid_view: ^0.7.0
  
  # State Management
  riverpod: ^2.4.9
  flutter_riverpod: ^2.4.9
  
  # Navigation
  go_router: ^12.1.3
  
  # Network & API
  http: ^1.1.2
  dio: ^5.4.0
  retrofit: ^4.0.3
  
  # Image Loading & Caching
  cached_network_image: ^3.3.0
  
  # Video Player
  video_player: ^2.8.1
  chewie: ^1.7.4
  youtube_explode_dart: ^2.2.0
  path_provider: ^2.1.2
  
  # File downloads and storage
  dio_smart_retry: ^6.0.0
  flutter_downloader: ^1.11.7
  
  # Local Storage
  shared_preferences: ^2.2.2
  hive: ^2.2.3
  hive_flutter: ^1.1.0
  
  # Utilities
  intl: ^0.19.0
  url_launcher: ^6.2.2
  connectivity_plus: ^5.0.2
  permission_handler: ^11.1.0
  
  # Animations & Loading
  shimmer: ^3.0.0
  lottie: ^2.7.0
  
  # Theme & Design
  dynamic_color: ^1.6.8
  flex_color_scheme: ^7.3.1

dev_dependencies:
  flutter_test:
    sdk: flutter
  
  # Linting
  flutter_lints: ^3.0.0
  
  # Code Generation
  build_runner: ^2.4.7
  hive_generator: ^2.0.1
  json_annotation: ^4.8.1
  json_serializable: ^6.7.1
  
  # App Icon Generation
  flutter_launcher_icons: ^0.13.1
  
  # Splash Screen Generation  
  flutter_native_splash: ^2.3.10

# For information on the generic Dart part of this file, see the
# following page: https://dart.dev/tools/pub/pubspec

# Flutter Launcher Icons Configuration
flutter_launcher_icons:
  android: "launcher_icon"
  ios: true
  image_path: "assets/icons/app_icon.png"
  min_sdk_android: 21 # android min sdk min:16, default 21
  remove_alpha_ios: true # Remove alpha channel for iOS App Store compliance
  web:
    generate: true
    image_path: "assets/icons/app_icon.png"
    background_color: "#ffffff"
    theme_color: "#1976D2"
  windows:
    generate: true
    image_path: "assets/icons/app_icon.png"
    icon_size: 48 # min:48, max:256, default: 48
  macos:
    generate: true
    image_path: "assets/icons/app_icon.png"
  linux:
    generate: true
    image_path: "assets/icons/app_icon.png"
  
  # Adaptive icons for Android
  adaptive_icon_background: "assets/icons/adaptive_background.png"
  adaptive_icon_foreground: "assets/icons/adaptive_foreground.png"
  adaptive_icon_monochrome: "assets/icons/adaptive_monochrome.png" # For Material You theming

# Flutter Native Splash Configuration
flutter_native_splash:
  # This package generates native code to customize Flutter's default white native splash screen
  # with background color and splash image.
  # Customize the parameters below, and run the following command in the terminal:
  # dart run flutter_native_splash:create
  # To restore Flutter's default white splash screen, run the following command in the terminal:
  # dart run flutter_native_splash:remove

  # color or background_image is the only required parameter.  Use color to set the background
  # of your splash screen to a solid color.  For background_image, use the path to a png image.
  # If a background_image is specified, background_color will be ignored.
  color: "#ffffff"
  #background_image: "assets/images/background.png"

  # Optional parameters are listed below.  To enable a parameter, uncomment the line by removing
  # the leading # character.

  # The image parameter allows you to specify an image used in the splash screen.  It must be a
  # png file and should be sized for 4x pixel density.
  image: assets/icons/splash_icon_filled.png

  # The branding property allows you to specify an image used as branding in the splash screen.
  # It must be a png file. It is supported for Android, iOS and the Web.  For Android 12,
  # see the Android 12 section below.
  #branding: assets/images/branding.png

  # To position the branding image at the bottom of the screen you can use bottom, bottomRight,
  # and bottomLeft. The default values is bottom if not specified or specified something else.
  #branding_mode: bottom

  # The color_dark, background_image_dark, image_dark, branding_dark are parameters that set the background
  # and image when the device is in dark mode. If they are not specified, the app will use the
  # parameters from above. If the image_dark parameter is specified, color_dark or
  # background_image_dark must be specified.  color_dark and background_image_dark cannot both be
  # set.
  color_dark: "#000000"
  image_dark: assets/icons/splash_icon_filled.png

  # Android 12 handles the splash screen differently than previous versions.  Please visit
  # https://developer.android.com/guide/topics/ui/splash-screen
  # Following are Android 12 specific parameter.
  android_12:
    # The image parameter sets the splash screen icon image.  If this parameter is not specified,
    # the app's launcher icon will be used instead.
    # Please note that the splash screen will be clipped to a circle on the center of the screen.
    # App icon with an icon background: This should be 960×960 pixels, and fit within a circle
    # 576 pixels in diameter.
    # App icon without an icon background: This should be 1152×1152 pixels, and fit within a circle
    # 768 pixels in diameter.
    image: assets/icons/adaptive_foreground.png

    # Splash screen background color.
    color: "#ffffff"

    # App icon background color.
    icon_background_color: "#ffffff"

    # The branding property allows you to specify an image used as branding in the splash screen.
    #branding: assets/images/branding.png

    # The image_dark, color_dark, icon_background_color_dark, and branding_dark set values that
    # apply when the device is in dark mode. If they are not specified, the app will use the
    # parameters from above.
    image_dark: assets/icons/adaptive_foreground.png
    color_dark: "#000000"
    icon_background_color_dark: "#000000"

  # The android, ios and web parameters can be used to disable generating a splash screen on a given
  # platform.
  android: true
  ios: true
  web: true

  # Platform specific images can be specified with the following parameters, which will override
  # the respective parameter.  You may specify all, selected, or none of these parameters:
  #color_android: "#42a5f5"
  #color_dark_android: "#042a49"
  #color_ios: "#42a5f5"
  #color_dark_ios: "#042a49"
  #color_web: "#42a5f5"
  #color_dark_web: "#042a49"
  #image_android: assets/images/splash-android.png
  #image_dark_android: assets/images/splash-invert-android.png
  #image_ios: assets/images/splash-ios.png
  #image_dark_ios: assets/images/splash-invert-ios.png
  #image_web: assets/images/splash-web.gif
  #image_dark_web: assets/images/splash-invert-web.gif
  #background_image_android: "assets/images/background-android.png"
  #background_image_dark_android: "assets/images/dark-background-android.png"
  #background_image_ios: "assets/images/background-ios.png"
  #background_image_dark_ios: "assets/images/dark-background-ios.png"
  #background_image_web: "assets/images/background-web.png"
  #background_image_dark_web: "assets/images/dark-background-web.png"

  # The position of the splash image can be set with android_gravity, ios_content_mode, and
  # web_image_mode parameters.  All default to center.
  #
  # android_gravity can be one of the following Android Gravity (see
  # https://developer.android.com/reference/android/view/Gravity): bottom, center,
  # center_horizontal, center_vertical, clip_horizontal, clip_vertical, end, fill, fill_horizontal,
  # fill_vertical, left, right, start, or top.
  #android_gravity: center
  #
  # ios_content_mode can be one of the following iOS UIView.ContentMode (see
  # https://developer.apple.com/documentation/uikit/uiview/contentmode): scaleToFill,
  # scaleAspectFit, scaleAspectFill, center, top, bottom, left, right, topLeft, topRight,
  # bottomLeft, or bottomRight.
  #ios_content_mode: center
  #
  # web_image_mode can be one of the following modes: center, contain, stretch, and cover.
  #web_image_mode: center

  # The screen orientation can be set in Android with the android_screen_orientation parameter.
  # Valid parameters can be found here:
  # https://developer.android.com/guide/topics/manifest/activity-element#screen
  #android_screen_orientation: sensorLandscape

  # To hide the notification bar, use the fullscreen parameter.  Has no effect on web since web
  # has no notification bar.  Defaults to false.
  # NOTE: Unlike Android, iOS will not automatically show the notification bar when the app loads.
  #       To show the notification bar, add the following code to your Flutter app:
  #       WidgetsFlutterBinding.ensureInitialized();
  #       SystemChrome.setEnabledSystemUIMode(SystemUiMode.manual, overlays: [SystemUiOverlay.top]);
  #fullscreen: true

  # If you have changed the name(s) of your info.plist file(s), you can specify the filename(s)
  # with the info_plist_files parameter.  Remove only the # characters in the three lines below,
  # do not remove any spaces:
  #info_plist_files:
  #  - 'ios/Runner/Info-Debug.plist'
  #  - 'ios/Runner/Info-Release.plist'

# The following section is specific to Flutter packages.
flutter:

  # The following line ensures that the Material Icons font is
  # included with your application, so that you can use the icons in
  # the material Icons class.
  uses-material-design: true

  # To add assets to your application, add an assets section, like this:
  assets:
    - assets/images/
    - assets/icons/
    - assets/animations/

  # An image asset can refer to one or more resolution-variant files, or
  # the argument only selects the main asset. It is also possible to have a
  # fallback image by specifying the first element as the main asset, and
  # the subsequent elements as fallback images.
  #
  # For details regarding adding assets from package dependencies, see
  # https://flutter.dev/assets-and-images/#from-packages

  # To add custom fonts to your application, add a fonts section here,
  # in this "flutter" section. Each entry in this list should have a
  # "family" key with the font family name, and a "fonts" key with a
  # list giving the asset path and other descriptors for the font. For
  # example:
  # fonts:
  #   - family: Schyler
  #     fonts:
  #       - asset: fonts/Schyler-Regular.ttf
  #       - asset: fonts/Schyler-Italic.ttf
  #         style: italic
  #   - family: Trajan Pro
  #     fonts:
  #       - asset: fonts/TrajanPro.ttf
  #       - asset: fonts/TrajanPro_Bold.ttf
  #         weight: 700
  #
  # For details regarding fonts from package dependencies,
  # see https://flutter.dev/custom-fonts/#from-packages